---
openapi: 3.0.3
info:
  title: Movie API
  description: Movie service API for managing movies and querying various movie information.
  contact:
    name: Helene Coullon
    url: https://helene-coullon.fr/
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.1
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: Home page of the service
      operationId: home
      responses:
        "200":
          description: Welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1 style='color:blue'>Welcome to the Movie service!</h1>
  /json:
    get:
      tags:
      - developers
      summary: Get the full JSON database
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMovies'
  /movies/{movieid}:
    get:
      tags:
      - developers
      summary: Get the movie by its ID
      operationId: get_movie_byid
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Movie description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
    post:
      tags:
        - admins
      summary: Add a movie item
      description: Adds a movie to the system
      operationId: create_movie
      parameters:
        - name: movieid
          in: path
          description: Movie ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieItem'
      responses:
        "200":
          description: Movie created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "409":
          description: an existing item already exists
    delete:
      tags:
      - admins
      summary: Delete a movie item
      operationId: del_movie
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: item deleted
        "400":
          description: ID not found
  /moviesbytitle:
    get:
      tags:
      - developers
      summary: Get the movie by its title
      operationId: get_movie_bytitle
      parameters:
      - name: title
        in: query
        description: pass a title
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
  /moviesbydirector:
    get:
      tags:
      - developers
      summary: Get movies by director
      operationId: get_movies_bydirector
      parameters:
      - name: director
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Movies list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMovies'
        "400":
          description: bad input parameter
        "404":
          description: no movies found for director
  /moviesbygenre:
    get:
      tags:
      - developers
      summary: Get movies by genre
      operationId: get_movies_bygenre
      parameters:
      - name: genre
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Movies list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMovies'
        "400":
          description: bad input parameter
        "404":
          description: no movies found for genre
  /movies/{movieid}/{rate}:
    put:
      tags:
        - admins
      summary: Update a movie rate
      description: update the rating of a movie
      operationId: update_movie_rating
      parameters:
        - name: movieid
          in: path
          description: Movie ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: rate
          in: path
          description: Movie rating.
          required: true
          style: simple
          explode: false
          schema:
            maximum: 10
            minimum: 0
            type: integer
      responses:
        "200":
          description: rate updated
        "400":
          description: movie ID not found
  /help:
    get:
      tags:
      - developers
      summary: Get all available endpoints
      operationId: help
      responses:
        "200":
          description: List of endpoints
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
components:
  schemas:
    AllMovies:
      type: object
      required:
        - movies
      properties:
        movies:
          type: array
          items:
            $ref: '#/components/schemas/MovieItem'
    MovieItem:
      type: object
      required:
        - title
        - rating
        - director
        - id
      properties:
        title:
          type: string
          example: The Martian
        rating:
          type: integer
          example: 7
        director:
          type: string
          example: Paul McGuigan
        id:
          type: string
          example: 39ab85e5-5e8e-4dc5-afea-65dc368bd7ab
        genre:
          type: array
          items:
            type: string
            example: Comedy
